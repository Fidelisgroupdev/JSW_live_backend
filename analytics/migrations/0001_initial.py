# Generated by Django 5.1.7 on 2025-04-01 16:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('alert_type', models.CharField(choices=[('fifo_violation', 'FIFO Violation'), ('shelf_life', 'Shelf Life Warning'), ('capacity', 'Capacity Warning'), ('camera_issue', 'Camera Issue'), ('system', 'System Alert')], max_length=20)),
                ('severity', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('critical', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClusterPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('turnover_rate', models.FloatField(help_text='Rate at which inventory turns over in this cluster')),
                ('average_residence_time', models.FloatField(help_text='Average time (in days) bags stay in this cluster')),
                ('fifo_compliance', models.FloatField(help_text='FIFO compliance percentage for this cluster')),
                ('utilization_average', models.FloatField(help_text='Average utilization percentage for the day')),
            ],
        ),
        migrations.CreateModel(
            name='ClusterSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bag_count', models.PositiveIntegerField()),
                ('utilization_percentage', models.FloatField()),
                ('oldest_bag_age', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FIFOCompliance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_bags', models.PositiveIntegerField()),
                ('compliant_bags', models.PositiveIntegerField(help_text='Bags that are being used in FIFO order')),
                ('non_compliant_bags', models.PositiveIntegerField(help_text='Bags that are not being used in FIFO order')),
                ('compliance_percentage', models.FloatField(help_text='Percentage of bags that are FIFO compliant')),
            ],
        ),
        migrations.CreateModel(
            name='InventorySnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('total_bags', models.PositiveIntegerField(help_text='Total number of bags in the warehouse')),
                ('total_clusters', models.PositiveIntegerField(help_text='Total number of active clusters')),
                ('average_utilization', models.FloatField(help_text='Average utilization percentage across all clusters')),
                ('oldest_bag_age', models.PositiveIntegerField(help_text='Age in days of the oldest bag in the warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='MovementAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_movements', models.PositiveIntegerField(default=0)),
                ('new_entries', models.PositiveIntegerField(default=0)),
                ('exits', models.PositiveIntegerField(default=0)),
                ('internal_movements', models.PositiveIntegerField(default=0)),
                ('automated_detections', models.PositiveIntegerField(default=0)),
                ('manual_entries', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Movement Analytics',
            },
        ),
        migrations.CreateModel(
            name='PredictiveModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('inventory_forecast', 'Inventory Forecast'), ('movement_prediction', 'Movement Prediction'), ('fifo_optimization', 'FIFO Optimization')], max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_trained', models.DateTimeField()),
                ('parameters', models.JSONField(default=dict)),
                ('accuracy_metrics', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
    ]

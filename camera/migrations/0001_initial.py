# Generated by Django 5.1.7 on 2025-04-01 16:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location_description', models.TextField(help_text='Description of camera location in the warehouse')),
                ('rtsp_url', models.URLField(help_text='RTSP URL for the camera feed')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error')], default='inactive', max_length=20)),
                ('last_status_change', models.DateTimeField(auto_now=True)),
                ('resolution_width', models.PositiveIntegerField(default=1280)),
                ('resolution_height', models.PositiveIntegerField(default=720)),
                ('fps', models.PositiveIntegerField(default=15, help_text='Frames per second')),
                ('detection_threshold', models.FloatField(default=0.7, help_text='Confidence threshold for detecting cement bags (0.0 to 1.0)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CameraCalibration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calibration_date', models.DateTimeField(auto_now=True)),
                ('calibration_matrix', models.JSONField(default=dict, help_text='Camera calibration matrix')),
                ('distortion_coefficients', models.JSONField(default=dict, help_text='Camera distortion coefficients')),
                ('reference_points', models.JSONField(default=list, help_text='Reference points used for calibration')),
            ],
        ),
        migrations.CreateModel(
            name='DetectionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event_type', models.CharField(choices=[('entry', 'Cluster Entry'), ('exit', 'Cluster Exit'), ('movement', 'Internal Movement'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('confidence_score', models.FloatField(help_text='Confidence score of the detection (0.0 to 1.0)')),
                ('image_snapshot', models.ImageField(blank=True, null=True, upload_to='detection_events/')),
                ('x_min', models.IntegerField(blank=True, null=True)),
                ('y_min', models.IntegerField(blank=True, null=True)),
                ('x_max', models.IntegerField(blank=True, null=True)),
                ('y_max', models.IntegerField(blank=True, null=True)),
                ('processed', models.BooleanField(default=False)),
            ],
        ),
    ]
